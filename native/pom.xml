<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>gov.dot.its.jpo.sdcsdw</groupId>
    <artifactId>per-xer-codec</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>per-xer-codec-native-${per-xer-codec.native.suffix}</artifactId>
  <packaging>${per-xer-codec.native.type}</packaging>

  <name>ASN.1 Codec Native Library</name>
  <description>Native library for the ASN.1 codec, built from autogenerated sources</description>

  <profiles>
    <profile>
      <id>osx</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
        <property>
          <name>!build.with.docker</name>
        </property>
      </activation>
      <properties>
        <per-xer-codec.native.suffix>osx</per-xer-codec.native.suffix>
        <per-xer-codec.native.type>dylib</per-xer-codec.native.type>
        <per-xer-codec.native.javah-os>darwin</per-xer-codec.native.javah-os>
        <per-xer-codec.native.compiler>clang</per-xer-codec.native.compiler>
        <per-xer-codec.native.compiler.sources>**/*.c</per-xer-codec.native.compiler.sources>
        <per-xer-codec.native.compiler.extra-args />
        <per-xer-codec.native.linker.extra-args />
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <id>remove PaxHeaders</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>process-sources</phase>
                <configuration>
                  <executable>bash</executable>
                  <arguments>
                    <argument>-c</argument>
                    <argument>rm -rf src/main/c/asn1/PaxHeaders*</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>unix</family>
          <name>Linux</name>
        </os>
        <property>
          <name>!build.with.docker</name>
        </property>
      </activation>
      <properties>
        <per-xer-codec.native.suffix>linux</per-xer-codec.native.suffix>
        <per-xer-codec.native.type>so</per-xer-codec.native.type>
        <per-xer-codec.native.javah-os>linux</per-xer-codec.native.javah-os>
        <per-xer-codec.native.compiler>clang</per-xer-codec.native.compiler>
        <per-xer-codec.native.compiler.sources>**/*.c</per-xer-codec.native.compiler.sources>
        <per-xer-codec.native.compiler.extra-args>-fPIC</per-xer-codec.native.compiler.extra-args>
        <per-xer-codec.native.linker.extra-args>-fPIC</per-xer-codec.native.linker.extra-args>
      </properties>
    </profile>
    <profile>
      <id>nt</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
        <property>
          <name>!build.with.docker</name>
        </property>
      </activation>
      <properties>
        <per-xer-codec.native.suffix>nt</per-xer-codec.native.suffix>
        <per-xer-codec.native.type>dll</per-xer-codec.native.type>
        <per-xer-codec.native.javah-os>win32</per-xer-codec.native.javah-os>
        <per-xer-codec.native.compiler>gcc</per-xer-codec.native.compiler>
        <per-xer-codec.native.compiler.sources>**/*.c</per-xer-codec.native.compiler.sources>
        <per-xer-codec.native.compiler.extra-args />
        <per-xer-codec.native.linker.extra-args />
      </properties>
    </profile>
    <profile>
      <id>docker</id>
      <activation>
        <property>
          <name>build.with.docker</name>
        </property>
      </activation>
      <properties>
        <per-xer-codec.native.suffix>linux</per-xer-codec.native.suffix>
        <per-xer-codec.native.type>so</per-xer-codec.native.type>
        <per-xer-codec.native.javah-os>linux</per-xer-codec.native.javah-os>
        <per-xer-codec.native.compiler>.${file.separator}dummy.${per-xer-codec.native.dummy.ext}</per-xer-codec.native.compiler>
        <per-xer-codec.native.compiler.sources>**/*.dummy</per-xer-codec.native.compiler.sources>
        <per-xer-codec.native.compiler.extra-args />
        <per-xer-codec.native.linker.extra-args />
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <id>build with docker</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>compile</phase>
                <configuration>
                  <executable>${per-xer-codec.native.build.interpreter}</executable>
                  <arguments>
                    <argument>${per-xer-codec.native.build.switch}</argument>
                    <argument>.${file.separator}build-with-docker.${per-xer-codec.native.build.ext}</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-osx</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
        <property>
          <name>build.with.docker</name>
        </property>
      </activation>
      <properties>
        <per-xer-codec.native.dummy.ext>sh</per-xer-codec.native.dummy.ext>
        <per-xer-codec.native.build.ext>sh</per-xer-codec.native.build.ext>
        <per-xer-codec.native.build.switch>-c</per-xer-codec.native.build.switch>
        <per-xer-codec.native.build.interpreter>bash</per-xer-codec.native.build.interpreter>
      </properties>
    </profile>
    <profile>
      <id>docker-linux</id>
      <activation>
        <os>
          <family>unix</family>
          <name>Linux</name>
        </os>
        <property>
          <name>build.with.docker</name>
        </property>
      </activation>
      <properties>
        <per-xer-codec.native.dummy.ext>sh</per-xer-codec.native.dummy.ext>
        <per-xer-codec.native.build.ext>sh</per-xer-codec.native.build.ext>
        <per-xer-codec.native.build.switch>-c</per-xer-codec.native.build.switch>
        <per-xer-codec.native.build.interpreter>bash</per-xer-codec.native.build.interpreter>
      </properties>
    </profile>
    <profile>
      <id>docker-nt</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
        <property>
          <name>build.with.docker</name>
          <value>!cygwin</value>
        </property>
      </activation>
      <properties>
        <per-xer-codec.native.dummy.ext>bat</per-xer-codec.native.dummy.ext>
        <per-xer-codec.native.build.ext>bat</per-xer-codec.native.build.ext>
        <per-xer-codec.native.build.switch>/C</per-xer-codec.native.build.switch>
        <per-xer-codec.native.build.interpreter>cmd.exe</per-xer-codec.native.build.interpreter>
      </properties>
    </profile>
    <profile>
      <id>docker-nt-cygwin</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
        <property>
          <name>build.with.docker</name>
          <value>cygwin</value>
        </property>
      </activation>
      <properties>
        <per-xer-codec.native.dummy.ext>bat</per-xer-codec.native.dummy.ext>
        <per-xer-codec.native.build.ext>sh</per-xer-codec.native.build.ext>
        <per-xer-codec.native.build.switch>-c</per-xer-codec.native.build.switch>
        <cygwin.install.root>C:\Program Files\Git</cygwin.install.root>
        <per-xer-codec.native.build.interpreter>${cygwin.install.root}\bin\bash</per-xer-codec.native.build.interpreter>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>gov.dot.its.jpo.sdcsdw</groupId>
      <artifactId>per-xer-codec-asn1-codegen</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>
  </dependencies>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>untar angular</id>
            <goals>
              <goal>unpack</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>gov.dot.its.jpo.sdcsdw</groupId>
                  <artifactId>per-xer-codec-asn1-codegen</artifactId>
                  <version>${project.version}</version>
                  <type>tar.gz</type>
                  <classifier>autogen-c-tar</classifier>
                  <outputDirectory>src/main/c/asn1/</outputDirectory>
                </artifactItem>
              </artifactItems>
              <overWrite>true</overWrite>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>1.0-alpha-8</version>
        <extensions>true</extensions>
        <configuration>
          <javahOS>${per-xer-codec.native.javah-os}</javahOS>
          <compilerProvider>generic-classic</compilerProvider>
          <compilerExecutable>${per-xer-codec.native.compiler}</compilerExecutable>
          <linkerExecutable>${per-xer-codec.native.compiler}</linkerExecutable>
          <sources>
            <source>
              <directory>src/main/c</directory>
              <includes>
                <include>${per-xer-codec.native.compiler.sources}</include>
              </includes>
            </source>
          </sources>

          <compilerStartOptions>
            <compilerStartOption>-I"${project.basedir}/src/main/c/asn1"
              ${per-xer-codec.native.compiler.extra-args}</compilerStartOption>
          </compilerStartOptions>

          <linkerStartOptions>
            <linkerStartOption>-shared
              ${per-xer-codec.native.linker.extra-args}</linkerStartOption>
          </linkerStartOptions>

        </configuration>
      </plugin>

    </plugins>

  </build>

</project>
